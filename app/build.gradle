/*
* Copyright 2021 Marco Cattaneo
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

plugins {
    id "kotlin-kapt"
    alias libs.plugins.android.application
    alias libs.plugins.android.hilt
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.parcelize
}

android {
    compileSdk = 34
    namespace = "pro.fateev"

    defaultConfig {
        applicationId = "pro.fateev.diary"
        minSdk = 23
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            proguardFile(getDefaultProguardFile("proguard-android-optimize.txt"))
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        // For AGP 4.1+
//        isCoreLibraryDesugaringEnabled = true
        // For AGP 4.0
        coreLibraryDesugaringEnabled = true

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.get()
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    def platform = platform(libs.bom.compose)
    implementation platform
    androidTestImplementation platform

    // room
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    kapt libs.room.compiler
    implementation libs.room.ktx
//    implementation libs.room.paging

    implementation libs.androidx.core
    implementation libs.androidx.material

    implementation libs.compose.ui
    implementation libs.compose.material
    implementation libs.compose.material.icons.extended
    implementation libs.compose.preview
    implementation libs.compose.navigation.core
    implementation libs.compose.navigation.hilt
    implementation libs.compose.activity
    implementation libs.exif
    implementation libs.zoomable
    implementation libs.coil
    implementation libs.security.crypto

    testImplementation libs.androidx.junit

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.compose.test.uiJunit4

    implementation libs.hilt.android
    kapt libs.hilt.androidCompiler

    debugImplementation libs.compose.test.uiManifest
    debugImplementation libs.compose.tooling
    debugImplementation libs.compose.preview

    coreLibraryDesugaring libs.desugaring
}